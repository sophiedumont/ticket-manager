[{"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/index.tsx":"1","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/reportWebVitals.ts":"2","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/App.tsx":"3","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/Login.tsx":"4","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/Tickets.tsx":"5","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/TicketTable.tsx":"6","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/CreateTicket.tsx":"7","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/Layout.tsx":"8","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/TicketForm.tsx":"9","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/UpdateTicket.tsx":"10","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/common/theme.ts":"11","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/store.ts":"12","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/User/reducer.ts":"13","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/User/constants.ts":"14","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/User/action.ts":"15","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/common/requestService.ts":"16","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/Ticket/reducer.ts":"17","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/Ticket/constants.ts":"18","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/Ticket/actions.ts":"19","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/CustomeDataGrid.tsx":"20","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/common/usePrevious.ts":"21","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/Register.tsx":"22","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/common/authTheme.ts":"23"},{"size":691,"mtime":1612046505219,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1611946048725,"results":"26","hashOfConfig":"25"},{"size":892,"mtime":1612108448935,"results":"27","hashOfConfig":"25"},{"size":3068,"mtime":1612108087260,"results":"28","hashOfConfig":"25"},{"size":1013,"mtime":1612108087268,"results":"29","hashOfConfig":"25"},{"size":3913,"mtime":1612108174240,"results":"30","hashOfConfig":"25"},{"size":1397,"mtime":1612107199164,"results":"31","hashOfConfig":"25"},{"size":1089,"mtime":1612108794453,"results":"32","hashOfConfig":"25"},{"size":5933,"mtime":1612100887804,"results":"33","hashOfConfig":"25"},{"size":1996,"mtime":1612108174237,"results":"34","hashOfConfig":"25"},{"size":788,"mtime":1612108811446,"results":"35","hashOfConfig":"25"},{"size":430,"mtime":1612057358268,"results":"36","hashOfConfig":"25"},{"size":1659,"mtime":1612106755188,"results":"37","hashOfConfig":"25"},{"size":554,"mtime":1612103539527,"results":"38","hashOfConfig":"25"},{"size":2016,"mtime":1612108233256,"results":"39","hashOfConfig":"25"},{"size":681,"mtime":1612053174444,"results":"40","hashOfConfig":"25"},{"size":2068,"mtime":1612100162301,"results":"41","hashOfConfig":"25"},{"size":699,"mtime":1612100041415,"results":"42","hashOfConfig":"25"},{"size":2083,"mtime":1612100120786,"results":"43","hashOfConfig":"25"},{"size":3239,"mtime":1612082079306,"results":"44","hashOfConfig":"25"},{"size":185,"mtime":1612095313666,"results":"45","hashOfConfig":"25"},{"size":3998,"mtime":1612108087265,"results":"46","hashOfConfig":"25"},{"size":336,"mtime":1612107483696,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"hntfc",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/index.tsx",[],["96","97"],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/reportWebVitals.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/App.tsx",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/Login.tsx",["98"],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/Tickets.tsx",["99","100","101","102","103"],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/TicketTable.tsx",["104"],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/CreateTicket.tsx",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/Layout.tsx",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/TicketForm.tsx",["105","106","107"],"import React, { useEffect, useState } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport { Save } from '@material-ui/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { rootState } from '../Redux/store'\nimport { useHistory } from 'react-router-dom'\nimport { resetCreateTicketError, resetUpdateTicketError } from '../Redux/Ticket/actions'\nimport { Snackbar } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\nimport Box from '@material-ui/core/Box'\nimport { TicketModel } from '../Redux/Ticket/reducer'\nimport { usePrevious } from '../common/usePrevious'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    button: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginRight: theme.spacing(3),\n    },\n  }),\n);\n\nexport interface TicketFormProps {\n  handleSubmit: (subject:string, content:string, type:string, priority:string) => Promise<void>\n  ticket?: TicketModel\n}\n\nexport default function TicketForm({ handleSubmit, ticket }: TicketFormProps) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const [subject, setSubject] = useState(ticket ? ticket.subject : '');\n  const [content, setContent] = useState(ticket ? ticket.content : '');\n  const [type, setType] = useState(ticket ? ticket.type : '');\n  const [priority, setPriority] = useState(ticket ? ticket.priority : '');\n\n  const updateSuccess = useSelector((state: rootState) => state.ticket.updatedTicket)\n  const createSuccess = useSelector((state: rootState) => state.ticket.createdTicket)\n  const createError = useSelector((state: rootState) => state.ticket.getCreatedTicketsError)\n  const updateError = useSelector((state: rootState) => state.ticket.updateTicketError)\n  let history = useHistory();\n\n  const prevTicket = usePrevious(ticket);\n\n  useEffect(() => {\n    if (createSuccess || updateSuccess){\n      history.push(\"/tickets\");\n    }\n  }, [createSuccess || updateSuccess])\n\n\n  useEffect(()=>{\n    if (!prevTicket && ticket) {\n      setSubject(ticket.subject);\n      setContent(ticket.content);\n      setType(ticket.type);\n      setPriority(ticket.priority);\n    }\n  }, [ticket])\n\n  const onSubmitTicket = async () => {\n    await handleSubmit(subject, content, type, priority)\n  }\n\n  const handleCloseSnackBar = () => {\n    dispatch(resetCreateTicketError());\n    dispatch(resetUpdateTicketError());\n  }\n\n  const handleChangePriority = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setPriority(event.target.value as string);\n  };\n  const handleChangeType = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setType(event.target.value as string);\n  };\n\n  return (\n      <Grid container spacing={3} >\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"subject\"\n            value={subject}\n            name=\"subject\"\n            label=\"Subject\"\n            fullWidth\n            onChange={e =>setSubject(e.target.value)}\n            autoComplete=\"subject\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={12}>\n            <FormControl className={classes.formControl}>\n              <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\" required>\n                Priority\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-placeholder-label-label\"\n                id=\"demo-simple-select-placeholder-label\"\n                value={priority}\n                onChange={handleChangePriority}\n                displayEmpty\n                className={classes.selectEmpty}\n              >\n                <MenuItem value={'high'}>High</MenuItem>\n                <MenuItem value={'medium'}>Medium</MenuItem>\n                <MenuItem value={'low'}>Low</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\" required>\n                Type\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-placeholder-label-label\"\n                id=\"demo-simple-select-placeholder-label\"\n                value={type}\n                onChange={handleChangeType}\n                displayEmpty\n                className={classes.selectEmpty}\n              >\n                <MenuItem value={'question'}>Question</MenuItem>\n                <MenuItem value={'bug'}>Bug</MenuItem>\n              </Select>\n            </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"content\"\n            name=\"content\"\n            value={content}\n            label=\"Content\"\n            fullWidth\n            autoComplete=\"content\"\n            multiline={true}\n            onChange={e =>setContent(e.target.value)}\n            rows={4}\n          />\n        </Grid>\n        <Box display=\"flex\" justifyContent={'flex-end'}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSubmitTicket}\n            startIcon={<Save/>}\n          >Save\n          </Button>\n        </Box>\n          <Snackbar open={createError || updateError} autoHideDuration={6000} onClose={handleCloseSnackBar}>\n            <Alert onClose={handleCloseSnackBar} severity=\"error\">\n              Ticket not created. Fill each field.\n            </Alert>\n          </Snackbar>\n      </Grid>\n\n  );\n}","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/UpdateTicket.tsx",["108","109","110"],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/common/theme.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/store.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/User/reducer.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/User/constants.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/User/action.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/common/requestService.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/Ticket/reducer.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/Ticket/constants.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/Redux/Ticket/actions.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/CustomeDataGrid.tsx",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/common/usePrevious.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/components/Register.tsx",["111"],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-manager/src/common/authTheme.ts",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":36,"column":6,"nodeType":"118","endLine":36,"endColumn":16,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"124","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"125","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":20},{"ruleId":"120","severity":1,"message":"126","line":8,"column":10,"nodeType":"122","messageId":"123","endLine":8,"endColumn":21},{"ruleId":"120","severity":1,"message":"127","line":9,"column":10,"nodeType":"122","messageId":"123","endLine":9,"endColumn":19},{"ruleId":"120","severity":1,"message":"128","line":19,"column":10,"nodeType":"122","messageId":"123","endLine":19,"endColumn":24},{"ruleId":"116","severity":1,"message":"129","line":65,"column":6,"nodeType":"118","endLine":65,"endColumn":38,"suggestions":"130"},{"ruleId":"116","severity":1,"message":"131","line":65,"column":7,"nodeType":"132","endLine":65,"endColumn":37},{"ruleId":"116","severity":1,"message":"133","line":75,"column":6,"nodeType":"118","endLine":75,"endColumn":14,"suggestions":"134"},{"ruleId":"120","severity":1,"message":"135","line":9,"column":10,"nodeType":"122","messageId":"123","endLine":9,"endColumn":25},{"ruleId":"120","severity":1,"message":"136","line":9,"column":41,"nodeType":"122","messageId":"123","endLine":9,"endColumn":64},{"ruleId":"120","severity":1,"message":"137","line":23,"column":9,"nodeType":"122","messageId":"123","endLine":23,"endColumn":20},{"ruleId":"120","severity":1,"message":"124","line":8,"column":27,"nodeType":"122","messageId":"123","endLine":8,"endColumn":36},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["140"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'useSelector' is defined but never used.","'rootState' is defined but never used.","'preventDefault' is defined but never used.","React Hook useEffect has missing dependencies: 'createSuccess', 'history', and 'updateSuccess'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useEffect has a missing dependency: 'prevTicket'. Either include it or remove the dependency array.",["142"],"'createOneTicket' is defined but never used.","'getUserConnectedTickets' is defined but never used.","'ticketError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [history, jwtToken]",{"range":"149","text":"150"},"Update the dependencies array to be: [createSuccess, history, updateSuccess]",{"range":"151","text":"152"},"Update the dependencies array to be: [prevTicket, ticket]",{"range":"153","text":"154"},[1324,1334],"[history, jwtToken]",[2434,2466],"[createSuccess, history, updateSuccess]",[2664,2672],"[prevTicket, ticket]"]