[{"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/index.tsx":"1","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/reportWebVitals.ts":"2","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/App.tsx":"3","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/users.tsx":"4","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/authProvider.tsx":"5","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/tickets.tsx":"6"},{"size":501,"mtime":1611862294185,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1611862294076,"results":"9","hashOfConfig":"8"},{"size":1380,"mtime":1611945536186,"results":"10","hashOfConfig":"8"},{"size":1089,"mtime":1611943168726,"results":"11","hashOfConfig":"8"},{"size":1267,"mtime":1611865947330,"results":"12","hashOfConfig":"8"},{"size":2319,"mtime":1611922051348,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"14gi7n2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/index.tsx",[],["28","29"],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/reportWebVitals.ts",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/App.tsx",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/users.tsx",["30","31","32"],"import * as React from 'react';\nimport {\n  List,\n  BooleanField,\n  Datagrid,\n  TextField,\n  EmailField,\n  Create,\n  SimpleForm,\n  TextInput,\n  BooleanInput,\n  Edit,\n  ArrayInput,\n  ChipField,\n  SimpleFormIterator\n} from 'react-admin';\n\nexport const UserList = (props: any) => (\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <TextField source=\"username\" />\n      <EmailField source=\"email\" />\n      <BooleanField label=\"Admin\" source=\"isAdmin\" />\n    </Datagrid>\n  </List>\n);\n\nexport const UserCreate = (props: any) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"username\" />\n      <TextInput source=\"email\" />\n      <TextInput source=\"password\" />\n      <BooleanInput label=\"Admin\" source=\"isAdmin\" />\n    </SimpleForm>\n  </Create>\n);\n\nexport const UserEdit = (props: any) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled label=\"Id\" source=\"id\" />\n      <TextInput source=\"username\" />\n      <TextInput source=\"email\" />\n      <BooleanInput label=\"Admin\" source=\"isAdmin\" />\n    </SimpleForm>\n  </Edit>\n);","/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/authProvider.tsx",[],"/Users/sophiedumont/Desktop/git-ticket-manager/ticket-manager/ticket-admin/src/tickets.tsx",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":13,"column":3,"nodeType":"39","messageId":"40","endLine":13,"endColumn":13},{"ruleId":"37","severity":1,"message":"41","line":14,"column":3,"nodeType":"39","messageId":"40","endLine":14,"endColumn":12},{"ruleId":"37","severity":1,"message":"42","line":15,"column":3,"nodeType":"39","messageId":"40","endLine":15,"endColumn":21},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'ArrayInput' is defined but never used.","Identifier","unusedVar","'ChipField' is defined but never used.","'SimpleFormIterator' is defined but never used.","no-global-assign","no-unsafe-negation"]